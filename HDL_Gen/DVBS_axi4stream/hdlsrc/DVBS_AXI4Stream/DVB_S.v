// -------------------------------------------------------------
// 
// File Name: F:\Git_Repository\DVB-S\HDL_Gen\DVBS_axi4stream\hdlsrc\DVBS_AXI4Stream\DVB_S.v
// Created: 2024-06-07 16:51:13
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// 
// -- -------------------------------------------------------------
// -- Rate and Clocking Details
// -- -------------------------------------------------------------
// Model base rate: 5e-09
// Target subsystem base rate: 5e-09
// 
// 
// Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ce_out        5e-09
// -- -------------------------------------------------------------
// 
// 
// Output Signal                 Clock Enable  Sample Time
// -- -------------------------------------------------------------
// ConvOut_0                     ce_out        5e-09
// ConvOut_1                     ce_out        5e-09
// -- -------------------------------------------------------------
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DVB_S
// Source Path: DVBS_AXI4Stream/DVB-S
// Hierarchy Level: 0
// Model version: 1.65
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ps

module DVB_S
          (clk,
           reset_n,
           clk_enable,
           ce_out,
           ConvOut_0,
           ConvOut_1);


  input   clk;
  input   reset_n;
  input   clk_enable;
  output  ce_out;
  output  ConvOut_0;  // boolean
  output  ConvOut_1;  // boolean


  wire DataSource_Scrambler_out1;
  wire DataSource_Scrambler_out2;
  wire DataSource_Scrambler_out3;
  wire [7:0] DataSource_Scrambler_out4;  // uint8
  wire DataSource_Scrambler_out5;
  wire DataSource_Scrambler_out6;
  wire [7:0] RS_Enc_out1;  // uint8
  wire [7:0] Interleaver_out1;  // uint8
  wire dec2bin_out1;
  wire Con_Encoder_out1_0;
  wire Con_Encoder_out1_1;


  DataSource_Scrambler u_DataSource_Scrambler (.clk(clk),
                                               .reset_n(reset_n),
                                               .enb(clk_enable),
                                               .simStart(DataSource_Scrambler_out1),
                                               .simEnd(DataSource_Scrambler_out2),
                                               .simVLD(DataSource_Scrambler_out3),
                                               .ScramblerOut(DataSource_Scrambler_out4),  // uint8
                                               .BinEn(DataSource_Scrambler_out5),
                                               .DataGenEn(DataSource_Scrambler_out6)
                                               );

  RS_Enc u_RS_Enc (.clk(clk),
                   .reset_n(reset_n),
                   .enb(clk_enable),
                   .Trigger(DataSource_Scrambler_out6),
                   .RS_In(DataSource_Scrambler_out4),  // uint8
                   .RS_Start(DataSource_Scrambler_out1),
                   .RS_End(DataSource_Scrambler_out2),
                   .RS_VLD(DataSource_Scrambler_out3),
                   .RS_Out(RS_Enc_out1)  // uint8
                   );

  Interleaver u_Interleaver (.clk(clk),
                             .reset_n(reset_n),
                             .enb(clk_enable),
                             .Trigger(DataSource_Scrambler_out6),
                             .DataIn(RS_Enc_out1),  // uint8
                             .InterOut(Interleaver_out1)  // uint8
                             );

  dec2bin u_dec2bin (.clk(clk),
                     .reset_n(reset_n),
                     .enb(clk_enable),
                     .DEC_IN(Interleaver_out1),  // uint8
                     .BinGen(DataSource_Scrambler_out5),
                     .BIN_OUT(dec2bin_out1)
                     );

  Con_Encoder u_Con_Encoder (.clk(clk),
                             .reset_n(reset_n),
                             .enb(clk_enable),
                             .In1(dec2bin_out1),
                             .VldIn(DataSource_Scrambler_out5),
                             .ConvOut_0(Con_Encoder_out1_0),  // boolean
                             .ConvOut_1(Con_Encoder_out1_1)  // boolean
                             );

  assign ConvOut_0 = Con_Encoder_out1_0;

  assign ConvOut_1 = Con_Encoder_out1_1;

  assign ce_out = clk_enable;

endmodule  // DVB_S

