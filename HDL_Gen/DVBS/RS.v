// -------------------------------------------------------------
// 
// File Name: F:\Git_Repository\DVB-S\HDL_Gen\DVBS\RS.v
// Created: 2024-05-31 14:52:03
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: RS
// Source Path: DVBS/RS_Enc/RS
// Hierarchy Level: 1
// Model version: 1.56
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module RS
          (clk,
           reset_n,
           enb,
           RS_In,
           RS_Start,
           RS_End,
           RS_VLD,
           Trigger,
           RS_Out);


  input   clk;
  input   reset_n;
  input   enb;
  input   [7:0] RS_In;  // uint8
  input   RS_Start;
  input   RS_End;
  input   RS_VLD;
  input   Trigger;
  output  [7:0] RS_Out;  // uint8


  wire Trigger_inverted;
  reg  Trigger_delayed;
  wire Trigger_emulated;
  wire enb_gated;
  wire [7:0] Integer_Input_RS_Encoder_HDL_Optimized_out1;  // uint8
  wire [7:0] Integer_Input_RS_Encoder_HDL_Optimized_out1_1;  // uint8
  reg [7:0] Integer_Input_RS_Encoder_HDL_Optimized_out1_last_value;  // uint8


  assign Trigger_inverted =  ~ Trigger;



  always @(posedge clk or negedge reset_n)
    begin : Trigger_delay_process
      if (reset_n == 1'b0) begin
        Trigger_delayed <= 1'b0;
      end
      else begin
        if (enb) begin
          Trigger_delayed <= Trigger;
        end
      end
    end



  assign Trigger_emulated = Trigger_inverted & Trigger_delayed;



  assign enb_gated = Trigger_emulated && enb;

  Integer_Input_RS_Encoder_HDL_Optimized u_Integer_Input_RS_Encoder_HDL_Optimized (.clk(clk),
                                                                                   .reset_n(reset_n),
                                                                                   .enb(enb_gated),
                                                                                   .Integer_Input_RS_Encoder_HDL_Optimized_in(RS_In),  // uint8
                                                                                   .Integer_Input_RS_Encoder_HDL_Optimized_start(RS_Start),
                                                                                   .Integer_Input_RS_Encoder_HDL_Optimized_end(RS_End),
                                                                                   .Integer_Input_RS_Encoder_HDL_Optimized_datavalid(RS_VLD),
                                                                                   .Integer_Input_RS_Encoder_HDL_Optimized_out(Integer_Input_RS_Encoder_HDL_Optimized_out1)  // uint8
                                                                                   );

  always @(posedge clk or negedge reset_n)
    begin : out0_bypass_process
      if (reset_n == 1'b0) begin
        Integer_Input_RS_Encoder_HDL_Optimized_out1_last_value <= 8'b00000000;
      end
      else begin
        if (enb_gated) begin
          Integer_Input_RS_Encoder_HDL_Optimized_out1_last_value <= Integer_Input_RS_Encoder_HDL_Optimized_out1_1;
        end
      end
    end



  assign Integer_Input_RS_Encoder_HDL_Optimized_out1_1 = (Trigger_emulated == 1'b0 ? Integer_Input_RS_Encoder_HDL_Optimized_out1_last_value :
              Integer_Input_RS_Encoder_HDL_Optimized_out1);



  assign RS_Out = Integer_Input_RS_Encoder_HDL_Optimized_out1_1;

endmodule  // RS

