// -------------------------------------------------------------
// 
// File Name: F:\Git_Repository\DVB-S\HDL_Gen\DVBS\Con_Interleaver.v
// Created: 2024-05-31 16:05:09
// 
// Generated by MATLAB 23.2, HDL Coder 23.2, and Simulink 23.2
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: Con_Interleaver
// Source Path: DVBS/Interleaver/Con_Interleaver
// Hierarchy Level: 1
// Model version: 1.56
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module Con_Interleaver
          (clk,
           reset_n,
           enb,
           In1,
           Trigger,
           Out1);


  input   clk;
  input   reset_n;
  input   enb;
  input   [7:0] In1;  // uint8
  input   Trigger;
  output  [7:0] Out1;  // uint8


  wire enb_gated;
  reg  Trigger_delayed;
  wire Trigger_emulated;
  wire [7:0] Convolutional_Interleaver_out1;  // uint8
  wire [7:0] Convolutional_Interleaver_out1_bypass;  // uint8
  reg [7:0] Convolutional_Interleaver_out1_last_value;  // uint8


  always @(posedge clk or negedge reset_n)
    begin : Trigger_delay
      if (!reset_n) begin
        Trigger_delayed <= 1'b1;
      end
      else begin
        if (enb) begin
          Trigger_delayed <= Trigger;
        end
      end
    end

  assign Trigger_emulated = !Trigger_delayed && Trigger;

  assign enb_gated = Trigger_emulated && enb;

  Convolutional_Interleaver u_Convolutional_Interleaver (.clk(clk),
                                                         .reset_n(reset_n),
                                                         .enb(enb_gated),
                                                         .In1(In1),  // uint8
                                                         .Convolutional_Interleaver_out1(Convolutional_Interleaver_out1)  // uint8
                                                         );

  always @(posedge clk or negedge reset_n)
    begin : Out1_bypass_process
      if (reset_n == 1'b0) begin
        Convolutional_Interleaver_out1_last_value <= 8'b00000000;
      end
      else begin
        if (enb_gated) begin
          Convolutional_Interleaver_out1_last_value <= Convolutional_Interleaver_out1_bypass;
        end
      end
    end



  assign Convolutional_Interleaver_out1_bypass = (Trigger_emulated == 1'b0 ? Convolutional_Interleaver_out1_last_value :
              Convolutional_Interleaver_out1);



  assign Out1 = Convolutional_Interleaver_out1_bypass;

endmodule  // Con_Interleaver

